name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Stage 1: Code Quality & Linting
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: |
          echo "Code quality check passed!"

  # Stage 2: Security Audit
  security:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Security check complete
        run: |
          echo "Security audit passed!"

  # Stage 3: Testing
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    needs: [code-quality, security]

    strategy:
      matrix:
        node-version: [16, 18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '18'
        with:
          name: coverage-report
          path: coverage/

      - name: Test results
        run: |
          echo "Tests completed for Node.js ${{ matrix.node-version }}"

  # Stage 4: Build
  build:
    runs-on: ubuntu-latest
    name: Build Application
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Build complete
        run: |
          echo "Build completed successfully!"

  # Stage 5: Deploy (only on main branch)
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          echo "Deployment successful!"
          echo "Application is now live!"

  # Stage 6: Notification
  notify:
    runs-on: ubuntu-latest
    name: Workflow Complete
    needs: [code-quality, security, test, build]
    if: always()

    steps:
      - name: Workflow Summary
        run: |
          echo "Workflow Summary:"
          echo "Code Quality: ${{ needs.code-quality.result }}"
          echo "Security: ${{ needs.security.result }}"
          echo "Tests: ${{ needs.test.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo ""
          echo "CI Pipeline Complete!"
